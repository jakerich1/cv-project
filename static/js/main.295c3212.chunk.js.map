{"version":3,"sources":["components/Navbar/Navbar.js","components/EditArea/InputGroup/Input.js","components/EditArea/GeneralInputs/General.js","components/EditArea/Experience/Experience.js","components/EditArea/Education/Education.js","components/EditArea/EditArea.js","components/PreviewArea/PreviewArea.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","Component","InputGroup","props","textArea","bind","isTextArea","this","arrayKey","onChange","stateEvent","value","name","type","placeholder","title","className","isText","General","Input","firstName","secondName","email","phone","currentTitle","linkedIn","summary","Experience","experience","map","item","index","onClick","deleteExperience","xmlns","width","height","viewBox","stroke","fill","d","x1","y1","x2","y2","experienceEvent","role","company","startDate","endDate","newExperienceEvent","Education","education","handleDeleteEducation","handleEducationChange","qualification","school","handleNewEducation","EditArea","details","newEducation","PreviewArea","App","handleGeneralChange","handleExperienceChange","handleNewExperience","handleDeleteExperience","state","generalDetails","e","toChange","target","setState","experienceKey","dataset","arraykey","experienceStateArray","joined","concat","city","array","splice","educationKey","educationStateArray","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.295c3212.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './style.scss'\n\nclass Navbar extends Component {\n    constructor() {\n        super()\n    }\n\n    render() {\n        return (\n            <nav>\n              <h1>CV Builder</h1>\n            </nav>\n        )\n    }\n}\n\nexport default Navbar","import React, { Component } from 'react'\nimport './style.scss'\n\nclass InputGroup extends Component {\n    constructor(props) {\n        super(props)\n        this.textArea = this.textArea.bind(this)\n    }\n\n    textArea(isTextArea){\n        if (isTextArea) {\n            return <textarea data-arraykey={this.props.arrayKey} onChange={this.props.stateEvent} value={this.props.value} name={this.props.name} type={this.props.type} placeholder={`Enter ${this.props.title} here`}></textarea>\n        }\n        return <input data-arraykey={this.props.arrayKey} onChange={this.props.stateEvent} value={this.props.value} name={this.props.name} type={this.props.type} placeholder={`Enter ${this.props.title} here`}></input>\n    }\n\n    render() {\n        return (\n            <div className='input-group'>\n              <div className='title'>{this.props.title}</div>\n              {this.textArea(this.props.isText)}\n            </div>\n        )\n    }\n}\n\nexport default InputGroup","import React, { Component } from 'react'\nimport InputGroup from '../InputGroup/Input'\nimport './style.scss'\n\nclass General extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <div className='general-area'>\n              <h2>General Details</h2>\n              <form>\n                <div className='row'>\n                    <div className='col'>\n                        <InputGroup stateEvent={this.props.stateEvent} value={this.props.firstName} name='firstName' title='first name' type='text' />\n                    </div>\n                    <div className='col'>\n                        <InputGroup stateEvent={this.props.stateEvent} value={this.props.secondName} name='secondName' title='second name' type='text' />\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col'>\n                        <InputGroup stateEvent={this.props.stateEvent} value={this.props.email} name='email' title='email' type='email' />\n                    </div>\n                    <div className='col'>\n                        <InputGroup stateEvent={this.props.stateEvent} value={this.props.phone} name='phone' title='phone' type='tel' />\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col'>\n                        <InputGroup isText={false} stateEvent={this.props.stateEvent} value={this.props.currentTitle} name='currentTitle' title='current job title' type='text' />\n                    </div>\n                    <div className='col'></div>\n                </div>\n                <div className='row'>\n                    <div className='col'>\n                        <InputGroup isText={false} stateEvent={this.props.stateEvent} value={this.props.linkedIn} name='linkedIn' title='LinkedIn URL' type='url' />\n                    </div>\n                    <div className='col'></div>\n                </div>\n                <div className='row'>\n                    <div className='col'>\n                        <InputGroup isText={true} stateEvent={this.props.stateEvent} value={this.props.summary} name='summary' title='summary' type='text' />\n                    </div>\n                </div>\n              </form>\n            </div>\n        )\n    }\n}\n\nexport default General","import React, { Component } from 'react'\nimport InputGroup from '../InputGroup/Input'\nimport './style.scss'\n\nclass Experience extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <div className='experience-area'>\n              <h2>Experience</h2>\n              {this.props.experience.map((item, index) => (\n                  <div key={index} className='experience-wrap'>\n                    <div className='delete-exp'>\n                        <svg data-arraykey={index} onClick={this.props.deleteExperience} xmlns=\"http://www.w3.org/2000/svg\" width=\"44\" height=\"44\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                            <line x1=\"4\" y1=\"7\" x2=\"20\" y2=\"7\" />\n                            <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\" />\n                            <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\" />\n                            <path d=\"M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12\" />\n                            <path d=\"M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3\" />\n                        </svg>   \n                    </div>\n                    <div className='row'>\n                        <div className='col'>\n                            <InputGroup arrayKey={index} stateEvent={this.props.experienceEvent} type='text' value={item.role} title='Role' name='role'/>\n                        </div>\n                        <div className='col'>\n                            <InputGroup arrayKey={index} stateEvent={this.props.experienceEvent} type='text' value={item.company} title='Company' name='company'/>\n                        </div>\n                    </div>\n                    <div className='row'>\n                        <div className='col'>\n                            <InputGroup arrayKey={index} stateEvent={this.props.experienceEvent} type='text' value={item.startDate} title='Start Date' name='startDate'/>\n                        </div>\n                        <div className='col'>\n                            <InputGroup arrayKey={index} stateEvent={this.props.experienceEvent} type='text' value={item.endDate} title='End Date' name='endDate'/>\n                        </div>\n                    </div>\n                    <div className='row'>\n                        <div className='col'>\n                            <InputGroup arrayKey={index} stateEvent={this.props.experienceEvent} isText={true} type='text' value={item.summary} title='Summary' name='summary'/>\n                        </div>\n                    </div>\n                  </div>\n              ))}\n              <button onClick={this.props.newExperienceEvent}>Add Experience</button>\n            </div>\n        )\n    }\n}\n\nexport default Experience","import React, { Component } from 'react'\nimport InputGroup from '../InputGroup/Input'\nimport './style.scss'\n\nclass Education extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <div className='education-area'>\n              <h2>Education</h2>\n              {this.props.education.map((item, index) => (\n                  <div key={index} className='education-wrap'>\n                    <div className='delete-exp'>\n                        <svg data-arraykey={index} onClick={this.props.handleDeleteEducation} xmlns=\"http://www.w3.org/2000/svg\" width=\"44\" height=\"44\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                            <line x1=\"4\" y1=\"7\" x2=\"20\" y2=\"7\" />\n                            <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\" />\n                            <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\" />\n                            <path d=\"M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12\" />\n                            <path d=\"M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3\" />\n                        </svg>   \n                    </div>\n                    <div className='row'>\n                        <div className='col'>\n                            <InputGroup arrayKey={index} stateEvent={this.props.handleEducationChange} type='text' value={item.qualification} title='Qualification' name='qualification'/>\n                        </div>\n                        <div className='col'>\n                            <InputGroup arrayKey={index} stateEvent={this.props.handleEducationChange} type='text' value={item.school} title='School' name='school'/>\n                        </div>\n                    </div>\n                    <div className='row'>\n                        <div className='col'>\n                            <InputGroup arrayKey={index} stateEvent={this.props.handleEducationChange} type='text' value={item.startDate} title='Start Date' name='startDate'/>\n                        </div>\n                        <div className='col'>\n                            <InputGroup arrayKey={index} stateEvent={this.props.handleEducationChange} type='text' value={item.endDate} title='End Date' name='endDate'/>\n                        </div>\n                    </div>\n                    <div className='row'>\n                        <div className='col'>\n                            <InputGroup arrayKey={index} stateEvent={this.props.handleEducationChange} isText={true} type='text' value={item.summary} title='Summary' name='summary'/>\n                        </div>\n                    </div>\n                  </div>\n              ))}\n              <button onClick={this.props.handleNewEducation}>Add Education</button>\n            </div>\n        )\n    }\n}\n\nexport default Education","import React, { Component } from 'react'\nimport General from './GeneralInputs/General'\nimport Experience from './Experience/Experience'\nimport Education from './Education/Education'\nimport './style.scss'\n\nclass EditArea extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <div className='edit-area'>\n              <General stateEvent={this.props.stateEvent} details={this.props.details} />\n              <Experience deleteExperience={this.props.deleteExperience} newExperienceEvent={this.props.newExperienceEvent} experienceEvent={this.props.experienceEvent} experience={this.props.experience} />\n              <Education handleEducationChange={this.props.handleEducationChange} handleDeleteEducation={this.props.handleDeleteEducation} handleNewEducation={this.props.newEducation} education={this.props.education} />\n            </div>\n        )\n    }\n}\n\nexport default EditArea","import React, { Component } from 'react'\nimport './style.scss'\n\nclass PreviewArea extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <div className='preview-area'>\n              <div className='details'>\n                  <span className='name'>{`${this.props.details.firstName} ${this.props.details.secondName}`}</span>\n                  <span className='title'>{this.props.details.currentTitle}</span>\n                  <br/>\n                  <span className='phone'>{this.props.details.phone}</span>\n                  <span className='email'>{this.props.details.email}</span>\n                  <span className='linkedin'>{this.props.details.linkedIn}</span>\n              </div>\n              <div className='main-content'>\n                  <h3>Summary</h3>\n                  <div>{this.props.details.summary}</div>\n                  <br />\n                  <h3>Experience</h3>\n                  {this.props.experience.map((item) => (\n                      <div className='experience'>\n                          <div className='top'>\n                              <div>{item.role} - {item.company}</div>\n                              <div>{item.startDate} - {item.endDate}</div>\n                          </div>\n                          <div>{item.summary}</div>\n                      </div>\n                  ))}\n                  <br />\n                  <h3>Education</h3>\n                  {this.props.education.map((item) => (\n                      <div className='experience'>\n                          <div className='top'>\n                              <div>{item.qualification} - {item.school}</div>\n                              <div>{item.startDate} - {item.endDate}</div>\n                          </div>\n                          <div>{item.summary}</div>\n                      </div>\n                  ))}\n              </div>\n            </div>\n        )\n    }\n}\n\nexport default PreviewArea","import React, { Component } from 'react'\nimport Navbar from './components/Navbar/Navbar'\nimport EditArea from './components/EditArea/EditArea'\nimport PreviewArea from './components/PreviewArea/PreviewArea'\nimport './style/style.scss'\n\nclass App extends Component {\n    constructor() {\n        super()\n\n        this.handleGeneralChange = this.handleGeneralChange.bind(this)\n        this.handleExperienceChange = this.handleExperienceChange.bind(this)\n        this.handleNewExperience = this.handleNewExperience.bind(this)\n        this.handleDeleteExperience = this.handleDeleteExperience.bind(this)\n        this.handleNewEducation = this.handleNewEducation.bind(this)\n        this.handleDeleteEducation = this.handleDeleteEducation.bind(this)\n        this.handleEducationChange = this.handleEducationChange.bind(this)\n\n        this.state = {\n            generalDetails: {\n                firstName: '',\n                secondName: '',\n                email: '',\n                phone: '',\n                currentTitle: '',\n                summary: '',\n                linkedIn: ''\n            },\n            experience: [],\n            education: []\n        }\n    }\n\n    handleGeneralChange(e){\n        let toChange = e.target.name\n        let details = this.state.generalDetails\n        details[toChange] = e.target.value\n        this.setState({\n            generalDetails: details\n        })\n    }\n\n    handleExperienceChange(e){\n        const experienceKey = e.target.dataset.arraykey\n        let experienceStateArray = this.state.experience\n        let toChange = e.target.name\n        experienceStateArray[experienceKey][toChange] = e.target.value\n        this.setState({\n            experience: experienceStateArray\n        })\n    }\n\n    handleNewExperience(){\n        const blankExperience = {\n            role: '',\n            company: '',\n            city: '',\n            startDate: '',\n            endDate: '',\n            summary: ''\n        }\n        const joined = this.state.experience.concat(blankExperience);\n        this.setState({ experience: joined })\n    }\n\n    handleDeleteExperience(e){\n        let array = [...this.state.experience];\n        let index = e.target.dataset.arraykey;\n        if (index !== -1) {\n            array.splice(index, 1);\n            this.setState({experience: array});\n        }\n    }\n\n    handleNewEducation(){\n        const blankEducation = {\n            qualification: '',\n            school: '',\n            startDate: '',\n            endDate: '',\n            summary: ''\n        }\n        const joined = this.state.education.concat(blankEducation);\n        this.setState({ education: joined })\n    }\n\n    handleDeleteEducation(e){\n        let array = [...this.state.education];\n        let index = e.target.dataset.arraykey;\n        if (index !== -1) {\n            array.splice(index, 1);\n            this.setState({education: array});\n        }\n    }\n\n    handleEducationChange(e){\n        const educationKey = e.target.dataset.arraykey\n        let educationStateArray = this.state.education\n        let toChange = e.target.name\n        educationStateArray[educationKey][toChange] = e.target.value\n        this.setState({\n            education: educationStateArray\n        })\n    }\n\n    render() {\n        return (\n            <div id='root-wrap'>\n              <Navbar />\n              <EditArea handleEducationChange={this.handleEducationChange} handleDeleteEducation={this.handleDeleteEducation} newEducation={this.handleNewEducation} deleteExperience={this.handleDeleteExperience} newExperienceEvent={this.handleNewExperience} stateEvent={this.handleGeneralChange} experienceEvent={this.handleExperienceChange} details={this.state.generalDetails} experience={this.state.experience} education={this.state.education} />\n              <PreviewArea education={this.state.education} experience={this.state.experience} details={this.state.generalDetails}/>\n            </div>\n        )\n    }\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}